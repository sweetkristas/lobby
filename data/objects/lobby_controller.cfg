{
	id: "lobby_controller",
	is_human: true,
	is_strict: true,
    hidden_in_level: true,
	always_active: true,
	hidden_in_game: true,
	zorder: 50,

    vars: {
		client: null,
		font: 'RobotoCondensed-Regular',
		color: 'antique_white',
    },
	
    tmp: {
		username: USERNAME,
		session_id: -1,
		salt: null,
		password: 'Hello there',
		signed_on: false,
		
		servers: null,
		game_selection: null,
		lobby_users: [],
    },

    properties: {
		// Helper stuff.
		level_width: "level.dimensions[2]",
		level_height: "level.dimensions[3]",
		error_text: "def(txt) if(me.widgets.error_text, set(me.widgets.error_text.text, txt))",
		checked_tbs_send: "def(callable) if(vars.client, tbs_send(vars.client, callable), error_text('No TBS client configured'))",
		
		// Messages sent to lobby server
		get_server_info: "checked_tbs_send({type:'lobby_get_server_info'})",
		get_lobby_status: "checked_tbs_send({type:'lobby_get_status'})",
		do_sign_on: "checked_tbs_send({
			type:'lobby_login', 
			user:tmp.username, 
			session_id:tmp.session_id
		} + if(tmp.salt and tmp.password, {password:sha1(salt+tmp.password)})
		)",
		do_sign_off: "[
			checked_tbs_send({type:'lobby_quit', user:tmp.username, session_id:tmp.session_id}),
			set(tmp.username, ''),
			set(tmp.session_id, -1),
			set(tmp.salt, null),
			set(tmp.servers, null),
			set(tmp.lobby_users, null),
			set(tmp.game_selection, null),
			// XXX clear games/user/chat lists
			fire_event('redraw_interface'),
		]",
		send_heartbeat: "checked_tbs_send({
			type: 'lobby_heartbeat', 
			user: tmp.username, 
			session_id: tmp.session_id, 
		})",
		
		draw_games_list: "widget(me, {
			type: 'dialog', 
			rect: [0, 0, 2*level_width/3, level_height],
			background_alpha: 255,
			background_frame: 'empty_window',
			upscale_frame: false,
			cursor: [10, 10],
			children: [{
				type: 'grid',
				columns: 2,
				horizontal_padding: 40,
				children: [{
					type: 'text_editor', 
					id: 'username_edit_box',
					font_size: 12, 
					color: vars.color,
					width: 200, 
					height: 30,
					text: USERNAME or '',
					on_change: 'set(tmp.username, text)'
				}, {
					type: 'button', 
					id: 'sign_on_button',
					padding: [25, 10],
					enabled: false,
					label: {
						type: 'label', 
						text: 'Sign On', 
						size: 16, 
						color: vars.color, 
						font: vars.font
					},
					on_click: 'if(tmp.signed_on, [
						do_sign_off,
						set(me.widgets.sign_on_button.disable, true),
					], [
						do_sign_on, 
						set(me.widgets.sign_on_button.disable, true),
					])'
				}],
			}, {
				type: 'grid',
				id: 'games_list_grid',
				columns: 1,
				column_widths: 2*level_width/3,
				allow_selection: true,
				max_height: 2*level.height/3,
				wh: [2*level_width/3, 2*level.height/3],
				children: [
				],
			}, {
				type: 'label',
				size: 20,
				y: level_height - 40,
				x: 10,
				id: 'error_text',
				color: 'red',
				font: vars.font,
				text: 'No Errors at this time.',
			}],
		})",
		
		draw_user_list: "widget(me, {
			type: 'dialog', 
			rect: [2*level_width/3, 0, level_width/3, level_height/2],
			background_alpha: 255,
			background_frame: 'empty_window',
			upscale_frame: false,
			cursor: [10, 10],
			children: [
			]
		})",
		
		draw_chat_box: "widget(me, {
			type: 'dialog', 
			rect: [2*level_width/3, level_height/2, level_width/3, level_height/2],
			background_alpha: 255,
			background_frame: 'empty_window',
			upscale_frame: false,
			cursor: [10, 10],
			children: [
			]
		})",
		
		draw_interface: "set_widgets(me, [draw_games_list, draw_user_list, draw_chat_box])",
    },
    
    on_create: "[
		console_output_to_screen(false),
		set(x, 0), set(y, 0),
        set(vars.client, tbs_client(TBS_SERVER_ADDRESS, TBS_SERVER_PORT)),
		fire_event(me, 'redraw_interface'),
		fire_event(me, 'get_server_info'),
    ]",
	
	on_window_resize: "[
		set(level.dimensions, [0,0,new_width,new_height]),
		fire_event(me, 'redraw_interface'),
	] where new_width = max(width,800)-1
	  where new_height = max(height,600)-1
	",

	on_redraw_interface: "draw_interface",
	on_get_server_info: "get_server_info",
	
	on_process: "if(vars.client, tbs_process(vars.client))",
    
    on_connection_error: "[
		if(not tmp.signed_on, set(me.widgets.sign_on_button.enable, true)),
		error_text(error),
	]",
    
	on_connection_success: "error_text(null)",
	
	on_message_received: "[debug(message.type/*, message*/),
		switch(message.type, 
			'lobby_server_info', [
				if(message.servers, [
					//create_games_selector(message.servers, game_key, SCREEN_WIDTH, SCREEN_HEIGHT),
					set(tmp.servers, message.servers),
					set(tmp.game_selection, game_key)
				] where game_key = keys(message.servers)[0]), 
				get_lobby_status
			],
			
			'lobby_status', [
				set(tmp.lobby_users, message.clients), 
				//create_lobby_list(message.clients, SCREEN_WIDTH, SCREEN_HEIGHT),
				set(me.widgets.sign_on_button.enable, true),
				send_heartbeat,
			],
			

/*
			'lobby_password_request', send_password(message.salt, tmp.password, message.session_id),
			
			'lobby_login_success', [
				set(tmp.session_id, message.session_id), 
				set(tmp.signed_on, true), 
				set(widgets.sign_on_button.label.text, 'Sign Off'),
				set(widgets.sign_on_button.enable, true),
				get_server_info(message.session_id),
			],
			
			'error', error_text(message.description),
			
			'lobby_status', [
				set(tmp.lobby_users, message.clients), 
				create_lobby_list(message.clients, SCREEN_WIDTH, SCREEN_HEIGHT),
				send_heartbeat
				],
				
			'lobby_heartbeat_reply', send_heartbeat,
			
			'lobby_user_login', get_lobby_status,
			'lobby_user_quit', get_lobby_status,
				
			'lobby_bye', [
				set(tmp.signed_on, false), 
				set(widgets.sign_on_button.label.text, 'Sign On'),
				set(me.widgets.sign_on_button.enable, true),
				set(tmp.session_id, -1),
				set(tmp.lobby_game_id, -1),
				set(widgets.user_list_grid.children, []),
				if(me.widgets.game_selector, set(me.widgets.game_selector, null)),
			],
			
			//'lobby_game_created', [
			//	if(message.user = tmp.username, set(tmp.lobby_game_id, message.game_id)),
			//	tmp.lobby_users
			//],
			
			'game_created', [
				set(tmp.game_id, message.game_id),
				module_launch(tmp.game_selection, {
					game_id: message.game_id, 
					user: tmp.username, 
					session_id: tmp.session_id, 
					server_address: message.game_server_address, 
					server_port: message.game_server_port, 
					from_lobby: true} + tmp.games[game_selection]),
			],
			
			'lobby_request_to_join', do_request_to_join(message.user),
			
			'lobby_player_left_game', if(me.widgets.request_to_join_dlg, [set(me.widgets.request_to_join_dlg, null), enable_frames()]),
			
			'lobby_player_join_reply', [
				if(me.widgets.request_to_join_dlg, [set(me.widgets.request_to_join_dlg, null), enable_frames()]), 
				if(message.requesting_user = tmp.username, set(tmp.lobby_game_id, if(message.accept, message.game_id, -1)))
			],
*/
		)
    ]",

	on_end_anim: "animation('normal')",

	animation: {
		id: "normal",
		image: "cube.png",
		rect: [0,0,15,15],
		frames: 1,
		duration: 1000,
	},
	
	editor_info: {
		category: "controllers",
		var: [
			{
				name: "x_bound",
				type: "x",
				value: "x-100",
			},
			{
				name: "x2_bound",
				type: "x",
				value: "x+150",
			},
			{
				name: "y_bound",
				type: "y",
				value: "y-100",
			},
			{
				name: "y2_bound",
				type: "y",
				value: "y+150",
			},
		],
	},
}
